name: Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/gala-trading-bot
  CONTAINER_NAME: trading-bot

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            set -e
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull "${{ env.IMAGE_NAME }}:latest"
            CONTAINER_ID=$(docker ps -aq -f name=${{ env.CONTAINER_NAME }})
            if [ -n "$CONTAINER_ID" ]; then
              docker stop "${{ env.CONTAINER_NAME }}" || true
              docker rm "${{ env.CONTAINER_NAME }}" || true
            fi
            
            # Debug: Check if secrets are available
            echo "Checking secrets availability..."
            if [ -z "${{ secrets.PRIVATE_KEY }}" ]; then
              echo "ERROR: PRIVATE_KEY secret is not set!"
              exit 1
            fi
            if [ -z "${{ secrets.WALLET_ADDRESS }}" ]; then
              echo "ERROR: WALLET_ADDRESS secret is not set!"
              exit 1
            fi
            echo "Secrets are available, starting container..."
            
            docker run -d --name "${{ env.CONTAINER_NAME }}" --restart unless-stopped \
              -e PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" \
              -e WALLET_ADDRESS="${{ secrets.WALLET_ADDRESS }}" \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              -e KAFKA_API_URL="${{ secrets.KAFKA_API_URL }}" \
              -e KAFKA_API_KEY="${{ secrets.KAFKA_API_KEY }}" \
              -e KAFKA_API_SECRET="${{ secrets.KAFKA_API_SECRET }}" \
              -e KAFKA_TOPIC="${{ secrets.KAFKA_TOPIC }}" \
              -e GALASWAP_API_URL="${{ secrets.GALASWAP_API_URL }}" \
              "${{ env.IMAGE_NAME }}:latest"
